source('~/utokyo/統計学/lesson4/4-5.R')
source('~/utokyo/統計学/lesson4/4-5.R')
source('~/utokyo/統計学/forexam/test8.R')
source('~/utokyo/統計学/forexam/test8.R')
source('~/utokyo/統計学/forexam/test8.R')
source('~/utokyo/統計学/forexam/test8.R')
source('~/utokyo/統計学/forexam/test8.R')
source('~/utokyo/統計学/forexam/test8.R')
source('~/utokyo/統計学/forexam/test8.R')
source('~/utokyo/統計学/forexam/test8.R')
source('~/utokyo/統計学/forexam/test8.R')
source('~/utokyo/統計学/forexam/test8.R')
source('~/utokyo/統計学/forexam/test8.R')
source('~/utokyo/統計学/2018_10_25/4-2.R')
source('~/utokyo/統計学/2018_10_25/4-3.R')
source('~/utokyo/統計学/2018_10_25/4-2.R')
source('~/utokyo/統計学/2018_10_25/4-6.R')
source('~/utokyo/統計学/2018_10_25/4-6.R')
source('~/utokyo/統計学/2018_10_25/4-6.R')
qt(0.025,df=7)
qt(1-0.025,df=7)
source('~/utokyo/統計学/2018_10_25/4-6.R')
pt(-2.364624,df=7)
pt(2.364624,df=7)
knitr::opts_chunk$set(echo = TRUE)
legend("bottomleft",c("25V","20V","10V"),lty=1,pch=1,col=c(2:4) , bg="white")
library(knitr)
knitr::opts_chunk$set(echo = TRUE)
opar <- par(mfrow=c(2, 1))
Cf <- 470e-12
Rf <- 100e3
A <- function(f){
10*sqrt(1/(1 + (2*pi*f*Cf*Rf)^2))
}
B <- function(f){
atan((-2)*pi*f*Cf*Rf)
}
xlab <- "f[Hz]"
ylab <- expression("A")
curve(Mod(A(x)), from =1,to=1e+5, xlab=xlab ,ylab=ylab ,log="xy");grid();box()
ylab <- "w[rad]"
curve(B(x), from =1,to=1e+5, xlab=xlab ,ylab=ylab ,log="x",ylim=c(-pi ,pi), yaxt="n");grid(ny=NA)
axis(2,at=seq(-1,1,by=0.5)*pi ,labels=c(expression(-pi),expression( -0.5*pi),0,expression(0.5*pi),expression(pi )));abline(h=seq(-1,1,by=0.5)*pi ,lty=3,col="lightgray")
box()
par(opar)
frequency <- c(1, 10, 100, 1000, 10000)
amplitude <- c(0, 0, 1.5, 5.0, 5.0)
phase <- c(0, -0.1, -0.2)
points(frequency , amplitude/5.0, pch =19, col="red")
points(frequency , phase , pch =19, col="red")
opar <- par(mfrow=c(2, 1))
Cf <- 470e-12
Rf <- 100e3
A <- function(f){
10*sqrt(1/(1 + (2*pi*f*Cf*Rf)^2))
}
B <- function(f){
atan((-2)*pi*f*Cf*Rf)
}
xlab <- "f[Hz]"
ylab <- expression("A")
curve(Mod(A(x)), from =1,to=1e+5, xlab=xlab ,ylab=ylab ,log="xy");grid();box()
ylab <- "w[rad]"
curve(B(x), from =1,to=1e+5, xlab=xlab ,ylab=ylab ,log="x",ylim=c(-pi ,pi), yaxt="n");grid(ny=NA)
axis(2,at=seq(-1,1,by=0.5)*pi ,labels=c(expression(-pi),expression( -0.5*pi),0,expression(0.5*pi),expression(pi )));abline(h=seq(-1,1,by=0.5)*pi ,lty=3,col="lightgray")
box()
par(opar)
frequency <- c(1, 10, 100, 1000, 10000)
amplitude <- c(10.0, 10.0, 10.0, 10.0, 10.0)
# phase <- c(0, -0.1, -0.2)
points(frequency , amplitude/5.0, pch =19, col="red")
# points(frequency , phase , pch =19, col="red")
opar <- par(mfrow=c(2, 1))
Cf <- 470e-12
Rf <- 100e3
A <- function(f){
10*sqrt(1/(1 + (2*pi*f*Cf*Rf)^2))
}
B <- function(f){
atan((-2)*pi*f*Cf*Rf)
}
xlab <- "f[Hz]"
ylab <- expression("A")
curve(Mod(A(x)), from =1,to=1e+5, xlab=xlab ,ylab=ylab ,log="xy");grid();box()
ylab <- "w[rad]"
curve(B(x), from =1,to=1e+5, xlab=xlab ,ylab=ylab ,log="x",ylim=c(-pi ,pi), yaxt="n");grid(ny=NA)
axis(2,at=seq(-1,1,by=0.5)*pi ,labels=c(expression(-pi),expression( -0.5*pi),0,expression(0.5*pi),expression(pi )));abline(h=seq(-1,1,by=0.5)*pi ,lty=3,col="lightgray")
box()
par(opar)
frequency <- c(1, 10, 100, 1000, 10000)
amplitude <- c(10.0, 10.0, 10.0, 10.0, 10.0)
# phase <- c(0, -0.1, -0.2)
points(frequency , amplitude, pch =19, col="red")
# points(frequency , phase , pch =19, col="red")
opar <- par(mfrow=c(2, 1))
Cf <- 470e-12
Rf <- 100e3
A <- function(f){
10*sqrt(1/(1 + (2*pi*f*Cf*Rf)^2))
}
B <- function(f){
atan((-2)*pi*f*Cf*Rf)
}
xlab <- "f[Hz]"
ylab <- expression("A")
curve(Mod(A(x)), from =1,to=1e+5, xlab=xlab ,ylab=ylab ,log="xy");grid();box()
ylab <- "w[rad]"
curve(B(x), from =1,to=1e+5, xlab=xlab ,ylab=ylab ,log="x",ylim=c(-pi ,pi), yaxt="n");grid(ny=NA)
axis(2,at=seq(-1,1,by=0.5)*pi ,labels=c(expression(-pi),expression( -0.5*pi),0,expression(0.5*pi),expression(pi )));abline(h=seq(-1,1,by=0.5)*pi ,lty=3,col="lightgray")
box()
par(opar)
frequency <- c(1, 10, 100, 1000, 10000)
A <- c(10.0, 10.0, 10.0, 10.0, 10.0)
# phase <- c(0, -0.1, -0.2)
points(frequency, A, pch =19, col="red")
# points(frequency , phase , pch =19, col="red")
opar <- par(mfrow=c(2, 1))
Cf <- 470e-12
Rf <- 100e3
A <- function(f){
10*sqrt(1/(1 + (2*pi*f*Cf*Rf)^2))
}
B <- function(f){
atan((-2)*pi*f*Cf*Rf)
}
xlab <- "f[Hz]"
ylab <- expression("A")
curve(Mod(A(x)), from =1,to=1e+5, xlab=xlab ,ylab=ylab ,log="xy");grid();box()
ylab <- "w[rad]"
curve(B(x), from =1,to=1e+5, xlab=xlab ,ylab=ylab ,log="x",ylim=c(-pi ,pi), yaxt="n");grid(ny=NA)
axis(2,at=seq(-1,1,by=0.5)*pi ,labels=c(expression(-pi),expression( -0.5*pi),0,expression(0.5*pi),expression(pi )));abline(h=seq(-1,1,by=0.5)*pi ,lty=3,col="lightgray")
box()
par(opar)
frequency <- c(1, 10, 100, 1000, 10000)
amplitude <- c(10.0, 10.0, 10.0, 10.0, 10.0)
# phase <- c(0, -0.1, -0.2)
points(frequency , amplitude, pch =19, col="red")
# points(frequency , phase , pch =19, col="red")
opar <- par(mfrow=c(2, 1))
Cf <- 470e-12
Zc <- function(f){
complex(real=0, imaginary =-1/(2*pi*f*Cf))
}
xlab <- "Frequency[Hz]"
ylab <- expression("Amplification factor")
curve(Mod((1/(1/Zc(x) + 1/100000))/10000), from =1,to=1e+5, xlab=xlab ,ylab=ylab ,log="xy");grid();box()
ylab <- "Impedance deviation[rad]"
curve(Arg(-(1/(1/Zc(x) + 1/100000))/10000), from =1,to=1e+5,xlab=xlab,ylab=ylab ,log="x",ylim=c(-pi ,pi),yaxt="n");grid(ny=NA)
axis(2,at=seq(-1,1,by=0.5)*pi ,labels=c(expression(-pi),expression( -0.5*pi),0,expression(0.5*pi),expression(pi )));abline(h=seq(-1,1,by=0.5)*pi ,lty=3,col="lightgray")
box()
par(opar)
frequency <- c(1, 10, 100, 1000, 10000, 15000, 20000, 25000, 30000, 40000, 50000, 75000,  100000)
amplitude <- c(10.0, 10.0, 10.0, 10.0, 10.0, 9.47, 9.16, 8.12,  7.91, 6.56, 5.72, 4.27, 3.54)
# phase <- c(0, -0.1, -0.2)
points(frequency , amplitude/5.0, pch =19, col="red")
# points(frequency , phase , pch =19, col="red")
x <- c(0.684, 1.406, -0.663, -0.124, 0.849, -0.888, -0.492,
+ -0.044, -0.188, 0.536, 2.063, -1.379, 0.920, 0.453, 1.239)
sum(x)
length(x)
sum(x)/length(x)
mean(x)
median(x)
(5000000*1000)/1000
(5000000+5000000)/2
(5000000*1000+10000000000)/1001
quantile(x)
summary(x)
var(x)
sd(x)
sqrt(var(x))
IQR(x)
quantile(x, 0.75) - quantile(x, 0.25)
library(MASS)
data(birthwt)
head(birthwt, n=2)
birthwt$race <- factor(birthwt$race, labels=c("white", "black", "other"))
attach(birthwt)
hist(lwt)
hist(lwt, freq=FALSE)
boxplot(age, main="age", ylab="years")
cov(lwt, bwt)
cor(lwt, bwt)
plot(lwt, bwt)
intToBits (10)
intToBits (2)
intToBits (3)
intToBits (1)
intToBits (5)
Vout <- vector(mode = "numeric", length = 2^6)
for (i in 1:2^6) {
Rout <- 1/sum(1/R[ intToBits (i - 1) == 1])
}
R = intToBits (1-1) == 1
intToBits (1-1) == 1
intToBits (2-1) == 1
intToBits (3-1) == 1
R <- [820, 430]
R <- c(820, 430)
R[intToBits (3-1) == 1]
R <- c(25, 47, 110, 220, 430, 820)
for (i in 1:2^6) {
Rout <- 1/sum(1/R[ intToBits (i - 1) == 1])
}
Rout
Vout <- 8*0.2/Rout
Vout
8/Rout
8/RoutR
R
8/R
for (i in 1:2^6) {
Rout <- 1/sum(1/R[ intToBits (i - 1) == 1])
}
for (i in 1:2^6) {
Rout <- 1/sum(1/R[ intToBits (i - 1) == 1])
Vout <- 8*0.2/Rout
}
Vout
for (i in 1:2^6) {
Rout <- 1/sum(1/R[ intToBits (i - 1) == 1])
Vout[i] <- 8*0.2/Rout
}
Vout
plot(Vout)
R
R <- c(820, 430, 220, 110, 47, 25)
for (i in 1:2^6) {
Rout <- 1/sum(1/R[ intToBits (i - 1) == 1])
Vout[i] <- 8*0.2/Rout
}
plot(Vout)
Vout
Vout_Measured <- c(0, )
intToBits (1 - 1) == 1
intToBits (2 - 1) == 1
intToBits (3 - 1) == 1
intToBits (33 - 1) == 1
R <- c(820, 430, 220, 110, 47, 25)
for (i in 1:2^6) {
Rout <- 1/sum(1/R[ intToBits (i - 1) == 1])
Vout[i] <- 8*0.2/Rout
print(Rout)
}
print(Vout)
Vout_Measured <- c(63, )
Vout_Measured <- c(120.7, 106.8, 87.6, 73.7, 58.5, 44.5, 25.4, 11.4, 1.4)
Index_Measured <- c(63, 55, 47, 39, 31, 23, 15, 7, 0)
par(new=T)
plot(Index_Measured, Vout_Measured, color=red)
plot(Index_Measured, Vout_Measured, color='red')
plot(Index_Measured, Vout_Measured, col='red')
par(new)
plot(Vout)
plot(Index_Measured, Vout_Measured, color=‘red’)
par(new=T)
plot(Vout)
plot(Index_Measured, Vout_Measured, color='red')
par(new=T)
plot(Vout)
plot(Index_Measured, Vout_Measured, col='red')
par(new=T)
plot(Vout)
plot(Index_Measured, Vout_Measured, col='red', pch='20')
par(new=T)
plot(Vout)
plot(Index_Measured, Vout_Measured, col='red', pch=20)
par(new=T)
plot(Vout)
plot(Vout)
par(new=T)
plot(Index_Measured, Vout_Measured, col='red', pch=20)
rep(0:63, times=64)
seq(0, 63)
Vout <- vector(mode = "numeric", length = 2^6)
R <- c(820, 430, 220, 110, 47, 25)
for (i in 1:2^6) {
Rout <- 1/sum(1/R[ intToBits (i - 1) == 1])
Vout[i] <- 8*0.2/Rout
}
Vout
Vout
plot(x,wav.data ,type="l",xlab="",ylab="")
plot(x,wav.data ,type="l",xlab="",ylab="")
plot(x,wav.data ,type="l",xlab="",ylab="")
install.packages("Devore7")
install.packages("~/Desktop/Devore6_0.6-0.zip", repos = NULL, type = "win.binary")
install.packages("~/Desktop/Devore6_0.6-0.zip", repos = NULL, type = "win.binary")
ls
library(Devore7)
library(MASS)
library(lattice)
library(Devore7)
xmp12.02
head(xmp12.02)
xmp
xmp12.01
xmp12.03
xmp12.02
cor(xmp12.02)
plot(xmp12.02)
xmp12.02.lm <- lm(y ~ x, data=xmp12.02)
summary(xmp12.02)
summary(xmp12.02.lm)
abline(xmp12.02.lm)
abline(xmp12.02.lm, col=red)
abline(xmp12.02.lm, col='red')
confint(xmp12.02.lm)
confint(xmp12.02.lm, level=0.9)
confint(xmp12.02.lm, level=0.99)
d1 <- c(0.018, 0.016, 0.015, 0.014, 0.016, 0.015, 0.015, 0.016, 0.013, 0.016)
d1
d2 <- c(0.006, 0.006, 0.006, 0.005, 0.003, 0.006, 0.003, 0.007, 0.016, 0.008)
boxplot(d1)
boxplot(d2)
plot(d1)
hist(d1)
barplot(d1)
barplot(d2)
barplot(d1)
barplot(d2, beside=T)
hist(d1)
hist(d2)
hist(d2, add=T)
hist(d1, add=T)
mean(d1)
mean(d2)
t.test(d1, d2)
rnorm(100)
hist(rnorm(100))
hist(rnorm(100))
hist(rnorm(100))
hist(rnorm(100))
hist(rnorm(100))
hist(rnorm(100))
hist(rnorm(100))
hist(rnorm(100))
hist(rnorm(1000))
hist(rnorm(10000))
hist(rnorm(100000))
hist(rnorm(1000000))
hist(rnorm(10000000))
hist(rnorm(100))
qqline(rnorm(100))
qqnorm(rnorm(100))
qqline(rnorm(100))
qqline(rnorm(100))
qqline(rnorm(100))
qqline(rnorm(100))
qqline(rnorm(100))
qqnorm(rnorm(100))
qqline(rnorm(100))
plot(rnorm(100))
library(Devore7)
library(Devore6)
library(Devore)
library(Devore7)
head(xmp12.02)
plot(xmp12.02)
lm(y ~ x, data=xmp12.02)
xmp12.02.lm <- lm(y ~ x, data=xmp12.02)
summary(xmp12.02)
summary(xmp12.02.lm)
par(mfrow=c(2,2))
abline(xmp12.02.lm)
abline(xmp12.02.lm)
abline(xmp12.02.lm)
xmp12.02.lm <- lm(y ~ x, data=xmp12.02)
summary(xmp12.02.lm)
abline(xmp12.02.lm)
plot(xmp12.02)
abline(xmp12.02.lm)
confint(xmp12.02.lm)
par(mfrow=c(2,2))
plot(xmp12.02.lm)
plot(xmp12.02.lm)
library(Devore7)
library(Devore7)
library(Devore6)
library(Devore6)
ls
ls
library(Devore7)
xmp12.02
soil.pH <- xmp12.02$x
dieback <- xmp12.02$y
plot(soil.pH, dieback)
data <- data.frame(soil.pH, dieback)
result <- var(data)
result
cor(soil.pH, dieback)
data <- data.frame(dieback, soil.pH)
result <- var(data)
result
result <- lm(dieback ~ soil.pH)
result
abline(result)
summary(result)
confint(result)
sum(xmp12.02$x)
xmp12.02$x
sum(xmp12.02$y - (31.040 + (-5.792)*xmp12.02$x))
sum((xmp12.02$y - (31.040 + (-5.792)*xmp12.02$x))**2)
sum((xmp12.02$y - (31.040 + (-5.792)*xmp12.02$x))**2)/(length(xmp12.02$y)-2)
sqrt(sum((xmp12.02$y - (31.040 + (-5.792)*xmp12.02$x))**2)/(length(xmp12.02$y)-2))
sqrt(sum((xmp12.02$y - (31.040 + (-5.792)*xmp12.02$x))**2)/(length(xmp12.02$y)-2))/sum(xmp12.02$x-mean(xmp12.02$x))
sqrt(sum((xmp12.02$y - (31.040 + (-5.792)*xmp12.02$x))**2)/(length(xmp12.02$y)-2))/sum((xmp12.02$x-mean(xmp12.02$x)**2)
)
sqrt(sum((xmp12.02$y - (31.040 + (-5.792)*xmp12.02$x))**2)/(length(xmp12.02$y)-2))/sum(xmp12.02$x-mean(xmp12.02$x)**2)
sqrt(sum((xmp12.02$y - (31.040 + (-5.792)*xmp12.02$x))**2)/(length(xmp12.02$y)-2))/sum(xmp12.02$x-mean(xmp12.02$x)**2)
sqrt(sum((xmp12.02$y - (31.040 + (-5.792)*xmp12.02$x))**2)/(length(xmp12.02$y)-2))/sum(xmp12.02$x-mean(xmp12.02$x)**2)
sqrt(sum((xmp12.02$y - (31.040 + (-5.792)*xmp12.02$x))**2)/(length(xmp12.02$y)-2))/sqrt(sum(xmp12.02$x-mean(xmp12.02$x)**2))
sqrt(sum((xmp12.02$y - (31.040 + (-5.792)*xmp12.02$x))**2)/(length(xmp12.02$y)-2))/sqrt(sum(xmp12.02$x-mean(xmp12.02$x)**2)
)
sqrt(sum((xmp12.02$y - (31.040 + (-5.792)*xmp12.02$x))**2)/(length(xmp12.02$y)-2))/sqrt(sum(xmp12.02$x-mean(xmp12.02$x)**2))
sqrt(sum((xmp12.02$y - (31.040 + (-5.792)*xmp12.02$x))**2)/(length(xmp12.02$y)-2))
sqrt(sum(xmp12.02$x-mean(xmp12.02$x)**2))
sqrt(sum())
xmp12.02$x-mean(xmp12.02$x)**2
sqrt(sum((xmp12.02$x-mean(xmp12.02$x))**2))
sqrt(sum((xmp12.02$y - (31.040 + (-5.792)*xmp12.02$x))**2)/(length(xmp12.02$y)-2))/sqrt(sum((xmp12.02$x-mean(xmp12.02$x))**2))
qt(0.95, df=lenght(xmp12.02$x))
qt(0.95, df=length(xmp12.02$x))
qt(0.95, df=length(xmp12.02$x)-2)
qt(0.95, df=length(xmp12.02$x)-2)*sqrt(sum((xmp12.02$y - (31.040 + (-5.792)*xmp12.02$x))**2)/(length(xmp12.02$y)-2))/sqrt(sum((xmp12.02$x-mean(xmp12.02$x))**2))
qt(0.95, df=length(xmp12.02$x)-2)*sqrt(sum((xmp12.02$y - (31.040 + (-5.792)*xmp12.02$x))**2)/(length(xmp12.02$y)-2))/sqrt(sum((xmp12.02$x-mean(xmp12.02$x))**2))
confint(result)
qt(0.975, df=length(xmp12.02$x)-2)*sqrt(sum((xmp12.02$y - (31.040 + (-5.792)*xmp12.02$x))**2)/(length(xmp12.02$y)-2))/sqrt(sum((xmp12.02$x-mean(xmp12.02$x))**2))
-5.792 + qt(0.975, df=length(xmp12.02$x)-2)*sqrt(sum((xmp12.02$y - (31.040 + (-5.792)*xmp12.02$x))**2)/(length(xmp12.02$y)-2))/sqrt(sum((xmp12.02$x-mean(xmp12.02$x))**2))
-5.792 + qt(0.025, df=length(xmp12.02$x)-2)*sqrt(sum((xmp12.02$y - (31.040 + (-5.792)*xmp12.02$x))**2)/(length(xmp12.02$y)-2))/sqrt(sum((xmp12.02$x-mean(xmp12.02$x))**2))
-5.792 + qt(0.05, df=length(xmp12.02$x)-2)*sqrt(sum((xmp12.02$y - (31.040 + (-5.792)*xmp12.02$x))**2)/(length(xmp12.02$y)-2))/sqrt(sum((xmp12.02$x-mean(xmp12.02$x))**2))
-5.792 + qt(0.95, df=length(xmp12.02$x)-2)*sqrt(sum((xmp12.02$y - (31.040 + (-5.792)*xmp12.02$x))**2)/(length(xmp12.02$y)-2))/sqrt(sum((xmp12.02$x-mean(xmp12.02$x))**2))
conflct
conflct()
conflct() -help
help conflct()
\help conflct()
-5.792
-5.792/sqrt(sum((xmp12.02$y - (31.040 + (-5.792)*xmp12.02$x))**2)/(length(xmp12.02$y)-2))/sqrt(sum((xmp12.02$x-mean(xmp12.02$x))**2))
pt(-5.792/sqrt(sum((xmp12.02$y - (31.040 + (-5.792)*xmp12.02$x))**2)/(length(xmp12.02$y)-2))/sqrt(sum((xmp12.02$x-mean(xmp12.02$x))**2)), df=length(xmp12.02$x)-2)
dt(-5.792/sqrt(sum((xmp12.02$y - (31.040 + (-5.792)*xmp12.02$x))**2)/(length(xmp12.02$y)-2))/sqrt(sum((xmp12.02$x-mean(xmp12.02$x))**2)), df=length(xmp12.02$x)-2)
pt(df=length(xmp12.02$x)-2)
(sqrt(sum((xmp12.02$y - (31.040 + (-5.792)*xmp12.02$x))**2)/(length(xmp12.02$y)-2))/sqrt(sum((xmp12.02$x-mean(xmp12.02$x))**2)))
pt(-8.163102, df=length(xmp12.02$x)-2)
pt(-8.163102, df=length(xmp12.02$x)-2)
pt(-3.420898, df=length(xmp12.02$x)-2)
pt(-2.916299, df=length(xmp12.02$x)-2)
qt(0.975, df=length(xmp12.02$x)-2)
pt(2.109816, df=length(xmp12.02$x)-2)
qt(0.025, df=length(xmp12.02$x)-2)
pt(-2.109816, df=length(xmp12.02$x)-2)
pt((-5.792-0)/sqrt(sum((xmp12.02$y - (31.040 + (-5.792)*xmp12.02$x))**2)/(length(xmp12.02$y)-2))/sqrt(sum((xmp12.02$x-mean(xmp12.02$x))**2)), df=length(xmp12.02$x)-2)
(-5.792-0)/sqrt(sum((xmp12.02$y - (31.040 + (-5.792)*xmp12.02$x))**2)/(length(xmp12.02$y)-2))/sqrt(sum((xmp12.02$x-mean(xmp12.02$x))**2))
t <- (-5.792-0)/sqrt(sum((xmp12.02$y - (31.040 + (-5.792)*xmp12.02$x))**2)/(length(xmp12.02$y)-2))/sqrt(sum((xmp12.02$x-mean(xmp12.02$x))**2))
pt(t, df=length(xmp12.02$x)-2)
t <- (-5.792-0)/(sqrt(sum((xmp12.02$y - (31.040 + (-5.792)*xmp12.02$x))**2)/(length(xmp12.02$y)-2))/sqrt(sum((xmp12.02$x-mean(xmp12.02$x))**2)))
t
pt(t, df=length(xmp12.02$x)-2)
ls
getdw
getwd
getwd()
setwd("/Users/taishieguchi/dev/analyze/toggl")
setwd("/Users/taishieguchi/dev/analyze/toggl/byson")
toggl_data <- read.csv("toggl_task.csv")
toggl_data <- read.csv("toggl_tasks.csv")
toggl_data
toggl_data.head()
toggl_data.head
toggl_data
toggl_data <- read.csv("toggl_tasks.csv", sep=",", skip=0, header=T, stringsAsFactors=F, encoding="UTF-8")
toggl_data
toggl_data <- read.csv("toggl_tasks.csv", sep=",", skip=0, header=T, stringsAsFactors=F, fileEncoding="UTF-8"))
toggl_data <- read.csv("toggl_tasks.csv", sep=",", skip=0, header=T, stringsAsFactors=F, fileEncoding="UTF-8")
toggl_data
toggl_data <- read.csv("toggl_tasks.csv", header=T, stringsAsFactors=F, fileEncoding="UTF-8")
toggl_data <- read.table("toggl_tasks.csv", header=T, stringsAsFactors=F, fileEncoding="UTF-8")
toggl_data <- read.table("toggl_tasks.csv", stringsAsFactors=F, fileEncoding="UTF-8")
toggl_data
toggl_datalenagh
lenagh)oggl_data
library(MASS)
data(cpus)
cpus
head(cpus)
head(toggl_data)
pairs(cpus[, c(8, 2:7)])
pairs(cpus[, c(8, 2:7)])
pairs(cpus[, c(8, 2:7)])
pairs(cpus[, c(8, 2:7)])
cpus.lm <- lm(per ~ ., data=cpus[, 2:8])
cpus.lm <- lm(perf ~ ., data=cpus[, 2:8])
summary(cpus.lm)
seq(0, 0.5, 0.1)
cpus.bxcx <- boxcox(cpus.lm, lambda=seq(0, 0.5, 0.1))
cpus.bxcx
lambda < - cpus.bxcx$x
lambda < - cpus.bxcx$x[which.max(cpus.bxcx$y)]
lambda <- cpus.bxcx$x[which.max(cpus.bxcx$y)]
lambda
cpus.bxcx <- boxcox(cpus.lm, lambda=seq(0, 0.25, 0.35))
lambda <- cpus.bxcx$x[which.max(cpus.bxcx$y)]
lambda
cpus.bxcx <- boxcox(cpus.lm, lambda=seq(0, 0.5, 0.1))
lambda <- cpus.bxcx$x[which.max(cpus.bxcx$y)]
lambda
cpus.lm2 <- lm((perf^lambda - 1)/lambda ~ ., data = cpus[, 2:8])
cpus.lm2
summary(cpus.lm2)
par(mfrow=c(2,2))
plot(cpus.lm2)
cpus.lm2.step <- stepAIC(cpus.lm2)
